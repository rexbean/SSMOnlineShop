<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- config mybatis-->
    <!-- 1. Config the database's property-->
    <bean class = "com.rex.onlineShop.util.EncryptPropertyPlaceholderConfigurer">
        <property name = "locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
        <property name = "fileEncoding" value ="UTF-8"/>
    </bean>
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 2. Database connection pool-->
    <bean id = "abstractDataSource" abstract  = "true" class = "com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method ="close">
        <!-- c3p0 private property -->
        <property name = "maxPoolSize" value = "30" />
        <property name = "minPoolSize" value = "10" />
        <!--No automatically commit after close the connection-->
        <property name = "autoCommitOnClose" value = "false" />
        <!--Get the time out-->
        <property name = "checkoutTimeout" value = "10000" />
        <!--Get the retry attempts-->
        <property name = "acquireRetryAttempts" value = "2" />
    </bean>
    <bean id="master" parent = "abstractDataSource">
        <!--Config properties-->
        <property name = "driverClass" value ="${jdbc.driver}"/>
        <property name = "jdbcUrl" value = "${jdbc.master.url}" />
        <property name = "user" value = "${jdbc.username}" />
        <property name = "password" value = "${jdbc.password}"/>
    </bean>
    <bean id = "slave" parent = "abstractDataSource">
        <!--Config properties-->
        <property name = "driverClass" value ="${jdbc.driver}"/>
        <property name = "jdbcUrl" value = "${jdbc.slave.url}" />
        <property name = "user" value = "${jdbc.username}" />
        <property name = "password" value = "${jdbc.password}"/>
    </bean>
    <!--Config Dynamic DataSource-->
    <bean id = "dynamicDataSource" class = "com.rex.onlineShop.dao.split.DynamicDataSource">
        <property name = "targetDataSources">
            <map>
                <entry value-ref = "master" key = "master"/>
                <entry value-ref = "slave" key = "slave"/>
            </map>
        </property>
    </bean>
    <bean id = "dataSource" class = "org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name = "targetDataSource">
            <ref bean = "dynamicDataSource"/>
        </property>
    </bean>
    <!--3. Config SqlSessionFactory-->
    <bean id = "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--Inject the database connection poll-->
        <property name = "dataSource" ref = "dataSource"/>
        <!--Config Mybatis Global configuration field: mybatis-config.xml-->
        <property name = "configLocation" value = "classpath:mybatis-config.xml" />
        <!-- Scan entity package, find the alia-->
        <property name = "typeAliasesPackage" value="com.rex.onlineShop.entity" />
        <!--Scan sql configuration file: mapper xml files-->
        <property name = "mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--4. Scan Dao Interface package, dynamically implement Dao interface, inject to the spring container-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--Inject sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!--Dao interface package-->
        <property name = "basePackage" value = "com.rex.onlineShop.dao" />
    </bean>

</beans>